import { useState } from "react";
import Settings from "../Sidebarcomponents/Settings";
import Orders from "../Orderscomponents/Orders";
import Users from "../Sidebarcomponents/Users";
import Boxes from "../Boxescomponents/Boxes";
import { Checkbox } from "@material-ui/core/";

const Reqlist = () => {
  const [namee, setName] = useState("");
  const [confirmed, setstatus] = useState(false);
  const [pending, setstatus1] = useState(false);
  const [sorted, setIssorted] = useState(false);
  const [all, setAll] = useState(false);

  const [counter, setCounter] = useState(0);
  const sorting = () => {
    setIssorted(true);
  };

  const filterstatus1 = () => {
    setstatus1(false);
    setstatus(true);
    setAll(false);
  };
  const searching = () => {
    setstatus1(false);
    setstatus(false);
    setAll(false);
  };
  const filterstatus2 = () => {
    setstatus(false);
    setstatus1(true);
    setAll(false);
  };
  const alltable = () => {
    setAll(true);
    setstatus1(false);
    setstatus(false);
  };

  const renderCol = (dataa, id) => {
    return (
      <tr key={id}>
        <td style={{ padding: "0 20px" }}>{dataa.tick}</td>

        <td className="numberr" style={{ marginLeft: "-20px" }}>
          {dataa.code}
        </td>
        <td className="nameintable" style={{ padding: "0 120px" }}>
          {dataa.name}
        </td>
        <td className="nameintable" style={{ padding: "0 90px" }}>
          {dataa.status}
        </td>
        <td className="nameintable" style={{ padding: "0 90px" }}>
          {dataa.company}
        </td>
        <td className="nameintable" style={{ padding: "0 20px" }}>
          {dataa.date}
        </td>
      </tr>
    );
  };

  let dataa = [
    {
      id: 1,
      select: false,
      tick: (
        <Checkbox
          color="primary"
          onChange={(e) => {
            let checked = e.target.checked;
            if (checked) {
              setCounter(counter + 1);
            } else {
              setCounter(counter - 1);
            }
          }}
          style={{
            marginLeft: "-0.8vw",
          }}
        />
      ),
      code: "#6293620",
      name: "Mina Sami",
      status: "Pending confirmation",
      company: "Amazon",
      date: "Dec 30, 1:30pm, 2020",
    },
    {
      id: 2,
      select: false,
      tick: (
        <Checkbox
          color="primary"
          onChange={(e) => {
            let checked = e.target.checked;
            if (checked) {
              setCounter(counter + 1);
            } else {
              setCounter(counter - 1);
            }
          }}
          style={{
            marginLeft: "-0.8vw",

            outlineColor: "honeydew",
            boxShadow: "none",
          }}
        />
      ),
      code: "#6393620",
      name: "Leena",
      status: "Confirmed",
      company: "Amazon",
      date: "Dec 30, 1:30pm, 2020",
    },
    {
      id: 3,
      select: false,
      tick: (
        <Checkbox
          color="primary"
          onChange={(e) => {
            let checked = e.target.checked;
            if (checked) {
              setCounter(counter + 1);
            } else {
              setCounter(counter - 1);
            }
          }}
          style={{
            marginLeft: "-0.8vw",

            outlineColor: "honeydew",
            boxShadow: "none",
          }}
        />
      ),
      code: "#6493620",
      name: "Mina Sami",
      status: "Confirmed",
      company: "Amazon",
      date: "Dec 30, 1:30pm, 2020",
    },
    {
      id: 4,
      select: false,
      tick: (
        <Checkbox
          color="primary"
          onChange={(e) => {
            let checked = e.target.checked;
            if (checked) {
              setCounter(counter + 1);
            } else {
              setCounter(counter - 1);
            }
          }}
          style={{
            marginLeft: "-0.8vw",

            outlineColor: "honeydew",
            boxShadow: "none",
          }}
        />
      ),
      code: "#6493620",
      name: "Alia",
      status: "Confirmed",
      company: "Amazon",
      date: "Dec 30, 1:30pm, 2020",
    },
    {
      id: 5,
      select: false,
      tick: (
        <Checkbox
          color="primary"
          onChange={(e) => {
            let checked = e.target.checked;
            if (checked) {
              setCounter(counter + 1);
            } else {
              setCounter(counter - 1);
            }
          }}
          style={{
            marginLeft: "-0.8vw",

            outlineColor: "honeydew",
            boxShadow: "none",
          }}
        />
      ),
      code: "#6293620",
      name: "Mina Sami",
      status: "Confirmed",
      company: "Amazon",
      date: "Dec 30, 1:30pm, 2020",
    },
    {
      id: 6,
      select: false,
      tick: (
        <Checkbox
          color="primary"
          onChange={(e) => {
            let checked = e.target.checked;
            if (checked) {
              setCounter(counter + 1);
            } else {
              setCounter(counter - 1);
            }
          }}
          style={{
            marginLeft: "-0.8vw",

            outlineColor: "honeydew",
            boxShadow: "none",
          }}
        />
      ),
      code: "#6293620",
      name: "Ali",
      status: "Confirmed",
      company: "Amazon",
      date: "Dec 30, 1:30pm, 2020",
    },
    {
      id: 7,
      select: false,
      tick: (
        <Checkbox
          color="primary"
          onChange={(e) => {
            let checked = e.target.checked;
            if (checked) {
              setCounter(counter + 1);
            } else {
              setCounter(counter - 1);
            }
          }}
          style={{
            marginLeft: "-0.8vw",

            outlineColor: "honeydew",
            boxShadow: "none",
          }}
        />
      ),
      code: "#6293620",
      name: "Mina Sami",
      status: "Confirmed",
      company: "Amazon",
      date: "Dec 30, 1:30pm, 2020",
    },
    {
      id: 8,
      select: false,
      tick: (
        <Checkbox
          color="primary"
          onChange={(e) => {
            let checked = e.target.checked;
            if (checked) {
              setCounter(counter + 1);
            } else {
              setCounter(counter - 1);
            }
          }}
          style={{
            marginLeft: "-0.8vw",

            outlineColor: "honeydew",
            boxShadow: "none",
          }}
        />
      ),
      code: "#6293620",
      name: "Leena",
      status: "Confirmed",
      company: "Amazon",
      date: "Dec 30, 1:30pm, 2020",
    },
    {
      id: 9,
      select: false,
      tick: (
        <Checkbox
          color="primary"
          onChange={(e) => {
            let checked = e.target.checked;
            if (checked) {
              setCounter(counter + 1);
            } else {
              setCounter(counter - 1);
            }
          }}
          style={{
            marginLeft: "-0.8vw",

            outlineColor: "honeydew",
            boxShadow: "none",
          }}
        />
      ),

      code: "#6193620",
      name: "Mina Sami",
      status: "Confirmed",
      company: "Amazon",
      date: "Dec 30, 1:30pm, 2020",
    },
    {
      id: 10,
      select: false,
      tick: (
        <Checkbox
          color="primary"
          onChange={(e) => {
            let checked = e.target.checked;
            if (checked) {
              setCounter(counter + 1);
            } else {
              setCounter(counter - 1);
            }
          }}
          style={{
            marginLeft: "-0.8vw",

            outlineColor: "honeydew",
            boxShadow: "none",
          }}
        />
      ),
      code: "#6593620",
      name: "Mina Sami",
      status: "Confirmed",
      company: "Amazon",
      date: "Dec 30, 1:30pm, 2020",
    },
  ];

  return (
    <div className="reqlist">
      <div className="listss">
        <Users />
        <Boxes />
        <Orders />
        <div className="linee" style={{ marginTop: "0vh" }}>
          <svg
            width="256"
            height="1"
            viewBox="0 0 256 1"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <rect width="256" height="1" fill="#EBEFF2" />
          </svg>
        </div>

        <Settings />
        <div
          className="logout1"
          style={{ marginLeft: "18px", marginTop: "42vh", position: "sticky" }}
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="174"
            height="17"
            viewBox="0 0 174 17"
            fill="none"
          >
            <path
              d="M30.079 10.988H32.664V12H28.825V4.355H30.079V10.988ZM36.4517 12.099C35.8797 12.099 35.3627 11.9707 34.9007 11.714C34.4387 11.45 34.0757 11.0833 33.8117 10.614C33.5477 10.1373 33.4157 9.58733 33.4157 8.964C33.4157 8.348 33.5514 7.80167 33.8227 7.325C34.094 6.84833 34.4644 6.48167 34.9337 6.225C35.403 5.96833 35.9274 5.84 36.5067 5.84C37.086 5.84 37.6104 5.96833 38.0797 6.225C38.549 6.48167 38.9194 6.84833 39.1907 7.325C39.462 7.80167 39.5977 8.348 39.5977 8.964C39.5977 9.58 39.4584 10.1263 39.1797 10.603C38.901 11.0797 38.5197 11.45 38.0357 11.714C37.559 11.9707 37.031 12.099 36.4517 12.099ZM36.4517 11.01C36.7744 11.01 37.075 10.933 37.3537 10.779C37.6397 10.625 37.8707 10.394 38.0467 10.086C38.2227 9.778 38.3107 9.404 38.3107 8.964C38.3107 8.524 38.2264 8.15367 38.0577 7.853C37.889 7.545 37.6654 7.314 37.3867 7.16C37.108 7.006 36.8074 6.929 36.4847 6.929C36.162 6.929 35.8614 7.006 35.5827 7.16C35.3114 7.314 35.095 7.545 34.9337 7.853C34.7724 8.15367 34.6917 8.524 34.6917 8.964C34.6917 9.61667 34.8567 10.1227 35.1867 10.482C35.524 10.834 35.9457 11.01 36.4517 11.01ZM43.3893 5.84C43.8587 5.84 44.273 5.93533 44.6323 6.126C44.999 6.30933 45.285 6.54033 45.4903 6.819V5.939H46.7553V12.099C46.7553 12.6563 46.638 13.1513 46.4033 13.584C46.1687 14.024 45.8277 14.3687 45.3803 14.618C44.9403 14.8673 44.4123 14.992 43.7963 14.992C42.975 14.992 42.293 14.7977 41.7503 14.409C41.2077 14.0277 40.8997 13.507 40.8263 12.847H42.0693C42.1647 13.1623 42.3663 13.4153 42.6743 13.606C42.9897 13.804 43.3637 13.903 43.7963 13.903C44.3023 13.903 44.7093 13.749 45.0173 13.441C45.3327 13.133 45.4903 12.6857 45.4903 12.099V11.087C45.2777 11.373 44.988 11.615 44.6213 11.813C44.262 12.0037 43.8513 12.099 43.3893 12.099C42.8613 12.099 42.3773 11.967 41.9373 11.703C41.5047 11.4317 41.16 11.0577 40.9033 10.581C40.654 10.097 40.5293 9.55067 40.5293 8.942C40.5293 8.33333 40.654 7.79433 40.9033 7.325C41.16 6.85567 41.5047 6.49267 41.9373 6.236C42.3773 5.972 42.8613 5.84 43.3893 5.84ZM45.4903 8.964C45.4903 8.546 45.4023 8.183 45.2263 7.875C45.0577 7.567 44.834 7.33233 44.5553 7.171C44.2767 7.00967 43.976 6.929 43.6533 6.929C43.3307 6.929 43.03 7.00967 42.7513 7.171C42.4727 7.325 42.2453 7.556 42.0693 7.864C41.9007 8.16467 41.8163 8.524 41.8163 8.942C41.8163 9.36 41.9007 9.72667 42.0693 10.042C42.2453 10.3573 42.4727 10.5993 42.7513 10.768C43.0373 10.9293 43.338 11.01 43.6533 11.01C43.976 11.01 44.2767 10.9293 44.5553 10.768C44.834 10.6067 45.0577 10.372 45.2263 10.064C45.4023 9.74867 45.4903 9.382 45.4903 8.964ZM51.1414 12.099C50.5694 12.099 50.0524 11.9707 49.5904 11.714C49.1284 11.45 48.7654 11.0833 48.5014 10.614C48.2374 10.1373 48.1054 9.58733 48.1054 8.964C48.1054 8.348 48.2411 7.80167 48.5124 7.325C48.7838 6.84833 49.1541 6.48167 49.6234 6.225C50.0928 5.96833 50.6171 5.84 51.1964 5.84C51.7758 5.84 52.3001 5.96833 52.7694 6.225C53.2388 6.48167 53.6091 6.84833 53.8804 7.325C54.1518 7.80167 54.2874 8.348 54.2874 8.964C54.2874 9.58 54.1481 10.1263 53.8694 10.603C53.5908 11.0797 53.2094 11.45 52.7254 11.714C52.2488 11.9707 51.7208 12.099 51.1414 12.099ZM51.1414 11.01C51.4641 11.01 51.7648 10.933 52.0434 10.779C52.3294 10.625 52.5604 10.394 52.7364 10.086C52.9124 9.778 53.0004 9.404 53.0004 8.964C53.0004 8.524 52.9161 8.15367 52.7474 7.853C52.5788 7.545 52.3551 7.314 52.0764 7.16C51.7978 7.006 51.4971 6.929 51.1744 6.929C50.8518 6.929 50.5511 7.006 50.2724 7.16C50.0011 7.314 49.7848 7.545 49.6234 7.853C49.4621 8.15367 49.3814 8.524 49.3814 8.964C49.3814 9.61667 49.5464 10.1227 49.8764 10.482C50.2138 10.834 50.6354 11.01 51.1414 11.01ZM61.1261 5.939V12H59.8721V11.285C59.6741 11.5343 59.4137 11.7323 59.0911 11.879C58.7757 12.0183 58.4384 12.088 58.0791 12.088C57.6024 12.088 57.1734 11.989 56.7921 11.791C56.4181 11.593 56.1211 11.2997 55.9011 10.911C55.6884 10.5223 55.5821 10.053 55.5821 9.503V5.939H56.8251V9.316C56.8251 9.85867 56.9607 10.2767 57.2321 10.57C57.5034 10.856 57.8737 10.999 58.3431 10.999C58.8124 10.999 59.1827 10.856 59.4541 10.57C59.7327 10.2767 59.8721 9.85867 59.8721 9.316V5.939H61.1261ZM64.3536 6.962V10.317C64.3536 10.5443 64.405 10.7093 64.5076 10.812C64.6176 10.9073 64.801 10.955 65.0576 10.955H65.8276V12H64.8376C64.273 12 63.8403 11.868 63.5396 11.604C63.239 11.34 63.0886 10.911 63.0886 10.317V6.962H62.3736V5.939H63.0886V4.432H64.3536V5.939H65.8276V6.962H64.3536Z"
              fill="#90A0B7"
            />
            <path
              d="M7.77778 1H6.22222V8.77778H7.77778V1ZM11.5344 2.68778L10.43 3.79222C11.6589 4.78 12.4444 6.29667 12.4444 8C12.4444 11.01 10.01 13.4444 7 13.4444C3.99 13.4444 1.55556 11.01 1.55556 8C1.55556 6.29667 2.34111 4.78 3.56222 3.78444L2.46556 2.68778C0.956667 3.97111 0 5.86889 0 8C0 11.8656 3.13444 15 7 15C10.8656 15 14 11.8656 14 8C14 5.86889 13.0433 3.97111 11.5344 2.68778Z"
              fill="#C2CFE0"
            />
          </svg>
        </div>
      </div>
      <div className="pcicon">
        <svg
          width="8"
          height="8"
          viewBox="0 0 8 8"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <circle cx="4" cy="4" r="3" stroke="#FFB946" stroke-width="2" />
        </svg>
      </div>
      <div className="pcname">
        <h1 onClick={filterstatus2}> Pending</h1>
      </div>
      <div className="pcicon2">
        <svg
          width="8"
          height="8"
          viewBox="0 0 8 8"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <circle cx="4" cy="4" r="3" stroke="#2ED47A" stroke-width="2" />
        </svg>
      </div>
      <div className="pcname2">
        <h2 onClick={filterstatus1}> Confirmed</h2>
      </div>
      <div className="allrequests">
        <h1 onClick={alltable}> All Requests</h1>
      </div>
      <div className="Tabledesign2">
        <div
          onClick={sorting}
          className="filteringg"
          style={{
            marginLeft: "1210px",
            marginTop: "-213px",
            cursor: "pointer",
          }}
        >
          <svg
            width="113"
            height="18"
            viewBox="0 0 113 18"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M6.228 10.804C6.228 11.204 6.132 11.576 5.94 11.92C5.748 12.264 5.456 12.544 5.064 12.76C4.672 12.976 4.188 13.084 3.612 13.084C3.052 13.084 2.552 12.984 2.112 12.784C1.68 12.576 1.332 12.296 1.068 11.944C0.812 11.584 0.664 11.176 0.624 10.72H1.788C1.812 10.96 1.892 11.196 2.028 11.428C2.172 11.652 2.372 11.84 2.628 11.992C2.892 12.136 3.208 12.208 3.576 12.208C4.056 12.208 4.424 12.08 4.68 11.824C4.936 11.568 5.064 11.24 5.064 10.84C5.064 10.496 4.972 10.216 4.788 10C4.612 9.784 4.392 9.616 4.128 9.496C3.864 9.368 3.504 9.232 3.048 9.088C2.512 8.912 2.08 8.748 1.752 8.596C1.432 8.436 1.156 8.2 0.924 7.888C0.7 7.576 0.588 7.164 0.588 6.652C0.588 6.212 0.692 5.824 0.9 5.488C1.116 5.152 1.42 4.892 1.812 4.708C2.212 4.524 2.68 4.432 3.216 4.432C4.048 4.432 4.708 4.636 5.196 5.044C5.684 5.444 5.968 5.956 6.048 6.58H4.872C4.808 6.244 4.636 5.948 4.356 5.692C4.076 5.436 3.696 5.308 3.216 5.308C2.776 5.308 2.424 5.424 2.16 5.656C1.896 5.88 1.764 6.2 1.764 6.616C1.764 6.944 1.848 7.212 2.016 7.42C2.192 7.62 2.408 7.78 2.664 7.9C2.92 8.012 3.272 8.14 3.72 8.284C4.264 8.46 4.7 8.628 5.028 8.788C5.364 8.948 5.648 9.192 5.88 9.52C6.112 9.84 6.228 10.268 6.228 10.804ZM10.8043 6.328C11.4363 6.328 12.0003 6.464 12.4963 6.736C13.0003 7.008 13.3923 7.4 13.6723 7.912C13.9603 8.424 14.1043 9.024 14.1043 9.712C14.1043 10.4 13.9603 11 13.6723 11.512C13.3923 12.016 13.0003 12.404 12.4963 12.676C12.0003 12.948 11.4363 13.084 10.8043 13.084C10.1723 13.084 9.60431 12.948 9.10031 12.676C8.60431 12.404 8.21231 12.016 7.92431 11.512C7.63631 11 7.49231 10.4 7.49231 9.712C7.49231 9.024 7.63631 8.424 7.92431 7.912C8.21231 7.4 8.60431 7.008 9.10031 6.736C9.60431 6.464 10.1723 6.328 10.8043 6.328ZM10.8043 7.288C10.4123 7.288 10.0483 7.376 9.71231 7.552C9.38431 7.728 9.11631 8 8.90831 8.368C8.70831 8.728 8.60831 9.176 8.60831 9.712C8.60831 10.24 8.70831 10.688 8.90831 11.056C9.11631 11.416 9.38431 11.684 9.71231 11.86C10.0483 12.036 10.4123 12.124 10.8043 12.124C11.1963 12.124 11.5563 12.036 11.8843 11.86C12.2203 11.684 12.4883 11.416 12.6883 11.056C12.8963 10.688 13.0003 10.24 13.0003 9.712C13.0003 9.176 12.8963 8.728 12.6883 8.368C12.4883 8 12.2203 7.728 11.8843 7.552C11.5563 7.376 11.1963 7.288 10.8043 7.288ZM16.7392 7.744C16.9552 7.288 17.2712 6.936 17.6872 6.688C18.1032 6.432 18.5992 6.304 19.1752 6.304V7.492H18.8392C18.2233 7.492 17.7193 7.652 17.3272 7.972C16.9352 8.284 16.7392 8.804 16.7392 9.532V13H15.6472V6.412H16.7392V7.744ZM23.5167 12.04V13H22.7007C22.0287 13 21.5247 12.84 21.1887 12.52C20.8607 12.2 20.6967 11.664 20.6967 10.912V7.36H19.7127V6.412H20.6967V4.768H21.8007V6.412H23.5047V7.36H21.8007V10.936C21.8007 11.36 21.8767 11.652 22.0287 11.812C22.1887 11.964 22.4607 12.04 22.8447 12.04H23.5167ZM31.6901 6.328C32.2741 6.328 32.7941 6.464 33.2501 6.736C33.7061 7.008 34.0621 7.4 34.3181 7.912C34.5821 8.424 34.7141 9.024 34.7141 9.712C34.7141 10.4 34.5821 11 34.3181 11.512C34.0621 12.016 33.7061 12.404 33.2501 12.676C32.7941 12.948 32.2741 13.084 31.6901 13.084C31.0501 13.084 30.5061 12.924 30.0581 12.604C29.6181 12.276 29.3141 11.848 29.1461 11.32V13H28.0541V4.12H29.1461V8.092C29.3141 7.564 29.6181 7.14 30.0581 6.82C30.5061 6.492 31.0501 6.328 31.6901 6.328ZM31.3781 7.3C30.9541 7.3 30.5701 7.4 30.2261 7.6C29.8821 7.792 29.6141 8.072 29.4221 8.44C29.2301 8.808 29.1341 9.232 29.1341 9.712C29.1341 10.192 29.2301 10.616 29.4221 10.984C29.6141 11.344 29.8821 11.624 30.2261 11.824C30.5701 12.024 30.9541 12.124 31.3781 12.124C32.0581 12.124 32.5981 11.912 32.9981 11.488C33.4061 11.056 33.6101 10.464 33.6101 9.712C33.6101 8.96 33.4061 8.372 32.9981 7.948C32.5981 7.516 32.0581 7.3 31.3781 7.3ZM36.7161 6.412L38.8521 11.596L40.8321 6.412H42.0441L38.1321 16.12H36.8961L38.2641 12.892L35.4921 6.412H36.7161ZM44.1132 6.532V7.816H42.7932V6.532H44.1132ZM44.1132 11.716V13H42.7932V11.716H44.1132Z"
              fill="#6A707E"
            />
            <path
              d="M53.8509 4.54V5.428H51.4629V13H50.3709V5.428H47.9829V4.54H53.8509ZM58.0445 6.328C58.6765 6.328 59.2405 6.464 59.7365 6.736C60.2405 7.008 60.6325 7.4 60.9125 7.912C61.2005 8.424 61.3445 9.024 61.3445 9.712C61.3445 10.4 61.2005 11 60.9125 11.512C60.6325 12.016 60.2405 12.404 59.7365 12.676C59.2405 12.948 58.6765 13.084 58.0445 13.084C57.4125 13.084 56.8445 12.948 56.3405 12.676C55.8445 12.404 55.4525 12.016 55.1645 11.512C54.8765 11 54.7325 10.4 54.7325 9.712C54.7325 9.024 54.8765 8.424 55.1645 7.912C55.4525 7.4 55.8445 7.008 56.3405 6.736C56.8445 6.464 57.4125 6.328 58.0445 6.328ZM58.0445 7.288C57.6525 7.288 57.2885 7.376 56.9525 7.552C56.6245 7.728 56.3565 8 56.1485 8.368C55.9485 8.728 55.8485 9.176 55.8485 9.712C55.8485 10.24 55.9485 10.688 56.1485 11.056C56.3565 11.416 56.6245 11.684 56.9525 11.86C57.2885 12.036 57.6525 12.124 58.0445 12.124C58.4365 12.124 58.7965 12.036 59.1245 11.86C59.4605 11.684 59.7285 11.416 59.9285 11.056C60.1365 10.688 60.2405 10.24 60.2405 9.712C60.2405 9.176 60.1365 8.728 59.9285 8.368C59.7285 8 59.4605 7.728 59.1245 7.552C58.7965 7.376 58.4365 7.288 58.0445 7.288ZM66.0314 12.04V13H65.2154C64.5434 13 64.0394 12.84 63.7034 12.52C63.3754 12.2 63.2114 11.664 63.2114 10.912V7.36H62.2274V6.412H63.2114V4.768H64.3154V6.412H66.0194V7.36H64.3154V10.936C64.3154 11.36 64.3914 11.652 64.5434 11.812C64.7034 11.964 64.9754 12.04 65.3594 12.04H66.0314ZM70.184 6.328C70.824 6.328 71.364 6.488 71.804 6.808C72.252 7.128 72.564 7.556 72.74 8.092V6.412H73.832V13H72.74V11.32C72.564 11.856 72.252 12.284 71.804 12.604C71.364 12.924 70.824 13.084 70.184 13.084C69.6 13.084 69.08 12.948 68.624 12.676C68.168 12.404 67.808 12.016 67.544 11.512C67.288 11 67.16 10.4 67.16 9.712C67.16 9.024 67.288 8.424 67.544 7.912C67.808 7.4 68.168 7.008 68.624 6.736C69.08 6.464 69.6 6.328 70.184 6.328ZM70.496 7.3C69.824 7.3 69.284 7.516 68.876 7.948C68.476 8.372 68.276 8.96 68.276 9.712C68.276 10.464 68.476 11.056 68.876 11.488C69.284 11.912 69.824 12.124 70.496 12.124C70.928 12.124 71.312 12.024 71.648 11.824C71.992 11.624 72.26 11.344 72.452 10.984C72.644 10.616 72.74 10.192 72.74 9.712C72.74 9.232 72.644 8.808 72.452 8.44C72.26 8.072 71.992 7.792 71.648 7.6C71.312 7.4 70.928 7.3 70.496 7.3ZM76.7819 4.12V13H75.6899V4.12H76.7819ZM86.6984 11.044H82.9784L82.2704 13H81.0944L84.2264 4.696H85.4624L88.5824 13H87.4064L86.6984 11.044ZM86.3864 10.192L84.8384 5.92L83.2904 10.192H86.3864ZM93.5517 8.14V9.064H88.7517V8.14H93.5517ZM96.6503 12.1H100.91V13H95.4263V12.136L99.6143 5.44H95.5343V4.54H100.838V5.404L96.6503 12.1Z"
              fill="#109CF1"
            />
            <path d="M109.5 11L106.469 8L112.531 8L109.5 11Z" fill="#AEAEAE" />
          </svg>
        </div>
        <div
          className="filteringg2"
          style={{
            marginLeft: "1350px",
            marginTop: "-21px",
            cursor: "pointer",
          }}
        >
          <svg
            width="161"
            height="18"
            viewBox="0 0 161 18"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M5.664 4.54V5.428H1.968V8.356H5.1V9.208H1.968V13H0.876V4.54H5.664ZM6.88603 4.48C6.88603 4.28 6.95403 4.12 7.09003 4C7.22603 3.872 7.40603 3.808 7.63003 3.808C7.85403 3.808 8.03403 3.872 8.17003 4C8.30603 4.12 8.37403 4.28 8.37403 4.48C8.37403 4.68 8.30603 4.844 8.17003 4.972C8.03403 5.092 7.85403 5.152 7.63003 5.152C7.40603 5.152 7.22603 5.092 7.09003 4.972C6.95403 4.844 6.88603 4.68 6.88603 4.48ZM8.17003 6.412V13H7.07803V6.412H8.17003ZM11.1377 4.12V13H10.0457V4.12H11.1377ZM16.1573 12.04V13H15.3413C14.6693 13 14.1653 12.84 13.8293 12.52C13.5013 12.2 13.3373 11.664 13.3373 10.912V7.36H12.3533V6.412H13.3373V4.768H14.4413V6.412H16.1453V7.36H14.4413V10.936C14.4413 11.36 14.5173 11.652 14.6693 11.812C14.8293 11.964 15.1013 12.04 15.4853 12.04H16.1573ZM23.6699 9.34C23.6699 9.572 23.6539 9.772 23.6219 9.94H18.3539C18.3779 10.692 18.5899 11.256 18.9899 11.632C19.3979 12.008 19.8939 12.196 20.4779 12.196C21.0059 12.196 21.4459 12.064 21.7979 11.8C22.1579 11.528 22.3779 11.168 22.4579 10.72H23.6219C23.5419 11.176 23.3619 11.584 23.0819 11.944C22.8099 12.304 22.4539 12.584 22.0139 12.784C21.5739 12.984 21.0779 13.084 20.5259 13.084C19.8939 13.084 19.3339 12.948 18.8459 12.676C18.3579 12.404 17.9739 12.016 17.6939 11.512C17.4219 11 17.2859 10.4 17.2859 9.712C17.2859 9.024 17.4219 8.424 17.6939 7.912C17.9739 7.4 18.3579 7.008 18.8459 6.736C19.3339 6.464 19.8939 6.328 20.5259 6.328C21.1659 6.328 21.7219 6.464 22.1939 6.736C22.6739 7.008 23.0379 7.372 23.2859 7.828C23.5419 8.284 23.6699 8.788 23.6699 9.34ZM22.5659 9.412C22.5899 8.924 22.5099 8.516 22.3259 8.188C22.1419 7.86 21.8899 7.616 21.5699 7.456C21.2499 7.296 20.9019 7.216 20.5259 7.216C19.9259 7.216 19.4219 7.404 19.0139 7.78C18.6059 8.148 18.3859 8.692 18.3539 9.412H22.5659ZM26.3102 7.744C26.5262 7.288 26.8422 6.936 27.2582 6.688C27.6742 6.432 28.1702 6.304 28.7462 6.304V7.492H28.4102C27.7942 7.492 27.2902 7.652 26.8982 7.972C26.5062 8.284 26.3102 8.804 26.3102 9.532V13H25.2182V6.412H26.3102V7.744ZM32.0077 6.328C32.7517 6.328 33.3477 6.524 33.7957 6.916C34.2517 7.3 34.5277 7.82 34.6237 8.476H33.5797C33.5317 8.084 33.3677 7.764 33.0877 7.516C32.8157 7.26 32.4477 7.132 31.9837 7.132C31.5917 7.132 31.2837 7.228 31.0597 7.42C30.8437 7.604 30.7357 7.856 30.7357 8.176C30.7357 8.416 30.8077 8.612 30.9517 8.764C31.1037 8.908 31.2877 9.02 31.5037 9.1C31.7277 9.172 32.0317 9.252 32.4157 9.34C32.9037 9.452 33.2957 9.568 33.5917 9.688C33.8957 9.8 34.1517 9.984 34.3597 10.24C34.5757 10.496 34.6837 10.84 34.6837 11.272C34.6837 11.808 34.4797 12.244 34.0717 12.58C33.6717 12.916 33.1357 13.084 32.4637 13.084C31.6797 13.084 31.0397 12.896 30.5437 12.52C30.0477 12.144 29.7557 11.62 29.6677 10.948H30.7237C30.7637 11.348 30.9357 11.672 31.2397 11.92C31.5517 12.168 31.9597 12.292 32.4637 12.292C32.8397 12.292 33.1317 12.196 33.3397 12.004C33.5557 11.812 33.6637 11.56 33.6637 11.248C33.6637 10.992 33.5877 10.788 33.4357 10.636C33.2837 10.484 33.0957 10.368 32.8717 10.288C32.6477 10.208 32.3397 10.124 31.9477 10.036C31.4597 9.924 31.0677 9.812 30.7717 9.7C30.4837 9.588 30.2357 9.412 30.0277 9.172C29.8277 8.924 29.7277 8.592 29.7277 8.176C29.7277 7.624 29.9317 7.18 30.3397 6.844C30.7477 6.5 31.3037 6.328 32.0077 6.328ZM37.2109 6.532V7.816H35.8909V6.532H37.2109ZM37.2109 11.716V13H35.8909V11.716H37.2109Z"
              fill="#6A707E"
            />
            <path
              d="M46.9486 4.54V5.428H44.5606V13H43.4686V5.428H41.0806V4.54H46.9486ZM51.1421 6.328C51.7741 6.328 52.3381 6.464 52.8341 6.736C53.3381 7.008 53.7301 7.4 54.0101 7.912C54.2981 8.424 54.4421 9.024 54.4421 9.712C54.4421 10.4 54.2981 11 54.0101 11.512C53.7301 12.016 53.3381 12.404 52.8341 12.676C52.3381 12.948 51.7741 13.084 51.1421 13.084C50.5101 13.084 49.9421 12.948 49.4381 12.676C48.9421 12.404 48.5501 12.016 48.2621 11.512C47.9741 11 47.8301 10.4 47.8301 9.712C47.8301 9.024 47.9741 8.424 48.2621 7.912C48.5501 7.4 48.9421 7.008 49.4381 6.736C49.9421 6.464 50.5101 6.328 51.1421 6.328ZM51.1421 7.288C50.7501 7.288 50.3861 7.376 50.0501 7.552C49.7221 7.728 49.4541 8 49.2461 8.368C49.0461 8.728 48.9461 9.176 48.9461 9.712C48.9461 10.24 49.0461 10.688 49.2461 11.056C49.4541 11.416 49.7221 11.684 50.0501 11.86C50.3861 12.036 50.7501 12.124 51.1421 12.124C51.5341 12.124 51.8941 12.036 52.2221 11.86C52.5581 11.684 52.8261 11.416 53.0261 11.056C53.2341 10.688 53.3381 10.24 53.3381 9.712C53.3381 9.176 53.2341 8.728 53.0261 8.368C52.8261 8 52.5581 7.728 52.2221 7.552C51.8941 7.376 51.5341 7.288 51.1421 7.288ZM59.1291 12.04V13H58.3131C57.6411 13 57.1371 12.84 56.8011 12.52C56.4731 12.2 56.3091 11.664 56.3091 10.912V7.36H55.3251V6.412H56.3091V4.768H57.4131V6.412H59.1171V7.36H57.4131V10.936C57.4131 11.36 57.4891 11.652 57.6411 11.812C57.8011 11.964 58.0731 12.04 58.4571 12.04H59.1291ZM63.2816 6.328C63.9216 6.328 64.4616 6.488 64.9016 6.808C65.3496 7.128 65.6616 7.556 65.8376 8.092V6.412H66.9296V13H65.8376V11.32C65.6616 11.856 65.3496 12.284 64.9016 12.604C64.4616 12.924 63.9216 13.084 63.2816 13.084C62.6976 13.084 62.1776 12.948 61.7216 12.676C61.2656 12.404 60.9056 12.016 60.6416 11.512C60.3856 11 60.2576 10.4 60.2576 9.712C60.2576 9.024 60.3856 8.424 60.6416 7.912C60.9056 7.4 61.2656 7.008 61.7216 6.736C62.1776 6.464 62.6976 6.328 63.2816 6.328ZM63.5936 7.3C62.9216 7.3 62.3816 7.516 61.9736 7.948C61.5736 8.372 61.3736 8.96 61.3736 9.712C61.3736 10.464 61.5736 11.056 61.9736 11.488C62.3816 11.912 62.9216 12.124 63.5936 12.124C64.0256 12.124 64.4096 12.024 64.7456 11.824C65.0896 11.624 65.3576 11.344 65.5496 10.984C65.7416 10.616 65.8376 10.192 65.8376 9.712C65.8376 9.232 65.7416 8.808 65.5496 8.44C65.3576 8.072 65.0896 7.792 64.7456 7.6C64.4096 7.4 64.0256 7.3 63.5936 7.3ZM69.8796 4.12V13H68.7876V4.12H69.8796ZM72.7032 6.532V7.816H71.3832V6.532H72.7032ZM72.7032 11.716V13H71.3832V11.716H72.7032ZM80.0409 8.26C80.6649 8.452 81.1489 8.624 81.4929 8.776C81.8369 8.928 82.1369 9.168 82.3929 9.496C82.6489 9.816 82.7769 10.252 82.7769 10.804C82.7769 11.204 82.6769 11.576 82.4769 11.92C82.2849 12.264 81.9849 12.544 81.5769 12.76C81.1689 12.976 80.6689 13.084 80.0769 13.084H80.0409V14.044H79.6689V13.06C78.9089 12.988 78.2889 12.74 77.8089 12.316C77.3289 11.884 77.0609 11.352 77.0049 10.72H78.1689C78.2009 11.056 78.3449 11.372 78.6009 11.668C78.8649 11.956 79.2209 12.136 79.6689 12.208V9.136C79.0529 8.952 78.5729 8.788 78.2289 8.644C77.8929 8.492 77.5969 8.256 77.3409 7.936C77.0929 7.616 76.9689 7.188 76.9689 6.652C76.9689 6.212 77.0809 5.824 77.3049 5.488C77.5289 5.152 77.8449 4.892 78.2529 4.708C78.6609 4.524 79.1329 4.432 79.6689 4.432V3.4H80.0409V4.444C80.7849 4.5 81.3769 4.728 81.8169 5.128C82.2569 5.528 82.5169 6.012 82.5969 6.58H81.4209C81.3649 6.276 81.2209 6.004 80.9889 5.764C80.7569 5.524 80.4409 5.372 80.0409 5.308V8.26ZM78.1449 6.604C78.1449 7.012 78.2729 7.328 78.5289 7.552C78.7929 7.776 79.1729 7.972 79.6689 8.14V5.284C79.2049 5.284 78.8329 5.4 78.5529 5.632C78.2809 5.856 78.1449 6.18 78.1449 6.604ZM80.0529 12.232C80.5489 12.232 80.9329 12.1 81.2049 11.836C81.4769 11.572 81.6129 11.236 81.6129 10.828C81.6129 10.404 81.4769 10.076 81.2049 9.844C80.9329 9.612 80.5449 9.416 80.0409 9.256V12.232H80.0529ZM83.9893 12.16C85.3493 11.248 86.4373 10.344 87.2533 9.448C88.0693 8.544 88.4773 7.704 88.4773 6.928C88.4773 6.448 88.3533 6.064 88.1053 5.776C87.8653 5.48 87.4733 5.332 86.9293 5.332C86.3693 5.332 85.9453 5.512 85.6573 5.872C85.3693 6.224 85.2093 6.712 85.1773 7.336H84.0973C84.1533 6.392 84.4453 5.668 84.9733 5.164C85.5013 4.652 86.1813 4.396 87.0133 4.396C87.8053 4.396 88.4333 4.608 88.8973 5.032C89.3613 5.456 89.5933 6.056 89.5933 6.832C89.5933 7.472 89.3853 8.124 88.9693 8.788C88.5613 9.444 88.0453 10.056 87.4213 10.624C86.8053 11.184 86.1693 11.66 85.5133 12.052H89.8093V12.952H83.9893V12.16ZM91.0979 8.716C91.0979 10.076 91.3219 11.136 91.7699 11.896C92.2179 12.656 92.9939 13.036 94.0979 13.036C95.2019 13.036 95.9779 12.656 96.4259 11.896C96.8819 11.136 97.1099 10.076 97.1099 8.716C97.1099 7.372 96.8819 6.32 96.4259 5.56C95.9779 4.8 95.2019 4.42 94.0979 4.42C92.9939 4.42 92.2179 4.8 91.7699 5.56C91.3219 6.312 91.0979 7.364 91.0979 8.716ZM96.0299 8.716C96.0299 9.412 95.9779 9.996 95.8739 10.468C95.7779 10.932 95.5899 11.304 95.3099 11.584C95.0299 11.864 94.6259 12.004 94.0979 12.004C93.5779 12.004 93.1779 11.864 92.8979 11.584C92.6179 11.304 92.4259 10.932 92.3219 10.468C92.2259 9.996 92.1779 9.412 92.1779 8.716C92.1779 8.028 92.2259 7.452 92.3219 6.988C92.4259 6.524 92.6179 6.156 92.8979 5.884C93.1779 5.604 93.5779 5.464 94.0979 5.464C94.6259 5.464 95.0299 5.604 95.3099 5.884C95.5899 6.156 95.7779 6.524 95.8739 6.988C95.9779 7.452 96.0299 8.028 96.0299 8.716ZM98.589 8.716C98.589 10.076 98.813 11.136 99.261 11.896C99.709 12.656 100.485 13.036 101.589 13.036C102.693 13.036 103.469 12.656 103.917 11.896C104.373 11.136 104.601 10.076 104.601 8.716C104.601 7.372 104.373 6.32 103.917 5.56C103.469 4.8 102.693 4.42 101.589 4.42C100.485 4.42 99.709 4.8 99.261 5.56C98.813 6.312 98.589 7.364 98.589 8.716ZM103.521 8.716C103.521 9.412 103.469 9.996 103.365 10.468C103.269 10.932 103.081 11.304 102.801 11.584C102.521 11.864 102.117 12.004 101.589 12.004C101.069 12.004 100.669 11.864 100.389 11.584C100.109 11.304 99.917 10.932 99.813 10.468C99.717 9.996 99.669 9.412 99.669 8.716C99.669 8.028 99.717 7.452 99.813 6.988C99.917 6.524 100.109 6.156 100.389 5.884C100.669 5.604 101.069 5.464 101.589 5.464C102.117 5.464 102.521 5.604 102.801 5.884C103.081 6.156 103.269 6.524 103.365 6.988C103.469 7.452 103.521 8.028 103.521 8.716ZM106.08 8.716C106.08 10.076 106.304 11.136 106.752 11.896C107.2 12.656 107.976 13.036 109.08 13.036C110.184 13.036 110.96 12.656 111.408 11.896C111.864 11.136 112.092 10.076 112.092 8.716C112.092 7.372 111.864 6.32 111.408 5.56C110.96 4.8 110.184 4.42 109.08 4.42C107.976 4.42 107.2 4.8 106.752 5.56C106.304 6.312 106.08 7.364 106.08 8.716ZM111.012 8.716C111.012 9.412 110.96 9.996 110.856 10.468C110.76 10.932 110.572 11.304 110.292 11.584C110.012 11.864 109.608 12.004 109.08 12.004C108.56 12.004 108.16 11.864 107.88 11.584C107.6 11.304 107.408 10.932 107.304 10.468C107.208 9.996 107.16 9.412 107.16 8.716C107.16 8.028 107.208 7.452 107.304 6.988C107.408 6.524 107.6 6.156 107.88 5.884C108.16 5.604 108.56 5.464 109.08 5.464C109.608 5.464 110.012 5.604 110.292 5.884C110.572 6.156 110.76 6.524 110.856 6.988C110.96 7.452 111.012 8.028 111.012 8.716ZM117.507 8.14V9.064H112.707V8.14H117.507ZM122.49 4.312C123.034 4.312 123.502 4.408 123.894 4.6C124.286 4.792 124.582 5.056 124.782 5.392C124.982 5.728 125.082 6.108 125.082 6.532C125.082 7.06 124.926 7.504 124.614 7.864C124.31 8.224 123.862 8.44 123.27 8.512V8.584C123.886 8.744 124.366 8.992 124.71 9.328C125.062 9.664 125.238 10.128 125.238 10.72C125.238 11.416 125.006 11.984 124.542 12.424C124.078 12.864 123.41 13.084 122.538 13.084C121.666 13.084 120.958 12.86 120.414 12.412C119.878 11.956 119.562 11.292 119.466 10.42H120.546C120.618 10.948 120.818 11.368 121.146 11.68C121.482 11.992 121.934 12.148 122.502 12.148C123.038 12.148 123.45 12.012 123.738 11.74C124.026 11.46 124.17 11.1 124.17 10.66C124.17 10.132 123.962 9.732 123.546 9.46C123.138 9.18 122.554 9.04 121.794 9.04H121.506V8.128H121.794C123.266 8.128 124.002 7.636 124.002 6.652C124.002 6.22 123.866 5.876 123.594 5.62C123.322 5.364 122.946 5.236 122.466 5.236C121.986 5.236 121.582 5.376 121.254 5.656C120.926 5.928 120.734 6.332 120.678 6.868H119.61C119.666 6.068 119.942 5.444 120.438 4.996C120.942 4.54 121.626 4.312 122.49 4.312ZM126.772 8.716C126.772 10.076 126.996 11.136 127.444 11.896C127.892 12.656 128.668 13.036 129.772 13.036C130.876 13.036 131.652 12.656 132.1 11.896C132.556 11.136 132.784 10.076 132.784 8.716C132.784 7.372 132.556 6.32 132.1 5.56C131.652 4.8 130.876 4.42 129.772 4.42C128.668 4.42 127.892 4.8 127.444 5.56C126.996 6.312 126.772 7.364 126.772 8.716ZM131.704 8.716C131.704 9.412 131.652 9.996 131.548 10.468C131.452 10.932 131.264 11.304 130.984 11.584C130.704 11.864 130.3 12.004 129.772 12.004C129.252 12.004 128.852 11.864 128.572 11.584C128.292 11.304 128.1 10.932 127.996 10.468C127.9 9.996 127.852 9.412 127.852 8.716C127.852 8.028 127.9 7.452 127.996 6.988C128.1 6.524 128.292 6.156 128.572 5.884C128.852 5.604 129.252 5.464 129.772 5.464C130.3 5.464 130.704 5.604 130.984 5.884C131.264 6.156 131.452 6.524 131.548 6.988C131.652 7.452 131.704 8.028 131.704 8.716ZM134.263 8.716C134.263 10.076 134.487 11.136 134.935 11.896C135.383 12.656 136.159 13.036 137.263 13.036C138.367 13.036 139.143 12.656 139.591 11.896C140.047 11.136 140.275 10.076 140.275 8.716C140.275 7.372 140.047 6.32 139.591 5.56C139.143 4.8 138.367 4.42 137.263 4.42C136.159 4.42 135.383 4.8 134.935 5.56C134.487 6.312 134.263 7.364 134.263 8.716ZM139.195 8.716C139.195 9.412 139.143 9.996 139.039 10.468C138.943 10.932 138.755 11.304 138.475 11.584C138.195 11.864 137.791 12.004 137.263 12.004C136.743 12.004 136.343 11.864 136.063 11.584C135.783 11.304 135.591 10.932 135.487 10.468C135.391 9.996 135.343 9.412 135.343 8.716C135.343 8.028 135.391 7.452 135.487 6.988C135.591 6.524 135.783 6.156 136.063 5.884C136.343 5.604 136.743 5.464 137.263 5.464C137.791 5.464 138.195 5.604 138.475 5.884C138.755 6.156 138.943 6.524 139.039 6.988C139.143 7.452 139.195 8.028 139.195 8.716ZM141.754 8.716C141.754 10.076 141.978 11.136 142.426 11.896C142.874 12.656 143.65 13.036 144.754 13.036C145.858 13.036 146.634 12.656 147.082 11.896C147.538 11.136 147.766 10.076 147.766 8.716C147.766 7.372 147.538 6.32 147.082 5.56C146.634 4.8 145.858 4.42 144.754 4.42C143.65 4.42 142.874 4.8 142.426 5.56C141.978 6.312 141.754 7.364 141.754 8.716ZM146.686 8.716C146.686 9.412 146.634 9.996 146.53 10.468C146.434 10.932 146.246 11.304 145.966 11.584C145.686 11.864 145.282 12.004 144.754 12.004C144.234 12.004 143.834 11.864 143.554 11.584C143.274 11.304 143.082 10.932 142.978 10.468C142.882 9.996 142.834 9.412 142.834 8.716C142.834 8.028 142.882 7.452 142.978 6.988C143.082 6.524 143.274 6.156 143.554 5.884C143.834 5.604 144.234 5.464 144.754 5.464C145.282 5.464 145.686 5.604 145.966 5.884C146.246 6.156 146.434 6.524 146.53 6.988C146.634 7.452 146.686 8.028 146.686 8.716Z"
              fill="#109CF1"
            />
            <path d="M157.5 11L154.469 8L160.531 8L157.5 11Z" fill="#AEAEAE" />
          </svg>
        </div>

        <div className="homecontent1">
          <h2>Requests </h2>
        </div>

        <div className="Searching">
          <label onClick={searching}>
            <input
              style={{
                border: "none",
                outline: "none",
                marginLeft: "330px",
              }}
              placeholder="Search by contact"
              onChange={(e) => {
                setName(e.target.value);
              }}
            />
          </label>
        </div>

        <table
          style={{
            marginTop: "115px",
            marginLeft: "320px",
            whiteSpace: "nowrap",
            padding: "5px",
            paddingLeft: "20px",
            paddingRight: "0px",
            backgroundColor: "white",
            letterspacing: "0.01em",
            borderCollapse: "separate",
            lineHeight: "50px",
          }}
        >
          <tbody>
            <tr>
              <header>
                {" "}
                <svg
                  style={{
                    marginLeft: "20px",
                    marginTop: "8px",
                  }}
                  width="16"
                  height="16"
                  viewBox="0 0 16 16"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <rect
                    x="1"
                    y="1"
                    width="14"
                    height="14"
                    rx="3"
                    stroke="#D5D5D5"
                    stroke-width="2"
                  />
                </svg>
                <div className="homecontent3">
                  <h1>{counter}</h1>
                </div>
              </header>

              <th className="headers">ID number</th>
              <th className="headers">Name</th>
              <th className="headers">Status</th>
              <th className="headers">Supplier</th>
              <th className="headers">Date</th>
            </tr>

            {sorted
              ? dataa
                  .sort((a, b) => (a.name > b.name ? 1 : -1))
                  .filter((dataa) => {
                    if (confirmed === true) {
                      if (
                        dataa.status
                          .toLowerCase()
                          .includes("Confirmed".toLowerCase())
                      ) {
                        return dataa;
                      }
                    } else if (pending === true) {
                      if (
                        dataa.status
                          .toLowerCase()
                          .includes("Pending confirmation".toLowerCase())
                      ) {
                        return dataa;
                      }
                    } else if (all === true) {
                      return dataa;
                    } else if (namee === "") {
                      return dataa;
                    } else if (
                      dataa.name.toLowerCase().includes(namee.toLowerCase())
                    ) {
                      return dataa;
                    }
                  })
                  .map(renderCol)
              : dataa
                  .filter((dataa) => {
                    if (confirmed === true) {
                      if (
                        dataa.status
                          .toLowerCase()
                          .includes("Confirmed".toLowerCase())
                      ) {
                        return dataa;
                      }
                    } else if (pending === true) {
                      if (
                        dataa.status
                          .toLowerCase()
                          .includes("Pending confirmation".toLowerCase())
                      ) {
                        return dataa;
                      }
                    } else if (all === true) {
                      return dataa;
                    } else if (namee === "") {
                      return dataa;
                    } else if (
                      dataa.name.toLowerCase().includes(namee.toLowerCase())
                    ) {
                      return dataa;
                    }
                  })
                  .map(renderCol)}
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default Reqlist;
